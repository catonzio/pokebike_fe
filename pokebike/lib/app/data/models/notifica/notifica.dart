// This file is "main.dart"
// import 'dart:math';

import 'dart:convert';

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:moto_hunters/app/data/models/notifica/notifica_data.dart';
import 'package:get/get.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'notifica.freezed.dart';
// optional: Since our Person class is serializable, we must add this line.
// But if Person was not serializable, we could skip it.
part 'notifica.g.dart';

NotificaData _jsonStringToMap(String jsonString) {
  return NotificaData.fromJson(jsonDecode(jsonString) as Map<String, dynamic>);
}

DateTime _utcToTimezone(String date) {
  return DateTime.parse(date).add(const Duration(hours: 2));
}

@freezed
class Notifica with _$Notifica {
  const factory Notifica({
    required String id,
    @JsonKey(fromJson: _jsonStringToMap) required NotificaData data,
    required bool hasSeen,
    @JsonKey(fromJson: _utcToTimezone) required DateTime createdAt,
    DateTime? readAt,
    String? image,
  }) = _Notifica;

  factory Notifica.fromJson(Map<String, Object?> json) =>
      _$NotificaFromJson(json);

  factory Notifica.fake(int index) => Notifica(
      id: index.toString(),
      data: NotificaData.fake(index),
      hasSeen: false, // Random().nextDouble() <= 0.5,
      createdAt: DateTime.now(),
      readAt: null // DateTime.now()
      );
}
